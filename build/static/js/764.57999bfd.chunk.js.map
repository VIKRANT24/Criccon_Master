{"version":3,"file":"static/js/764.57999bfd.chunk.js","mappings":"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","sources":["components/card/card.js","components/toast/toast.js","pages/auth/login/login.service.js","pages/auth/login/login.component.js","services/firebase.js","../node_modules/react-bootstrap/esm/Image.js"],"sourcesContent":["\r\n\r\nconst Card = (props) => <div className={`card ${props.className ? props.className : ''}`}> {props.children} </div>\r\nCard.Header = (props) => <div className={`card-header d-flex justify-content-between ${props.className ? props.className : ''}`}> {props.children} </div>\r\nCard.Body = (props) => <div className={`card-body ${props.className ? props.className :''}`}> {props.children} </div>\r\nCard.Footer = (props) => <div className=\"card-footer\"> {props.children} </div>\r\nCard.Header.Title = (props) => <div className={`header-title ${props.className ? props.className : ''}`}> {props.children} </div>\r\nCard.Header.Action = (props) => <div className={`header-action ${props.className ? props.className : ''}`}> {props.children} </div>\r\n\r\nexport default Card;","//node imports\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\n\r\nconst Alert = (code, message) => {\r\n    if (code === \"00\")\r\n        toast.success(message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n        });\r\n    else\r\n        toast.error(message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n        });\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Alert;","//node imports\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\n//local imports\r\nimport { auth } from '../../../services/firebase'\r\nimport Alert from '../../../components/toast/toast'\r\nimport { loadingToggleAction } from \"../../../store/action/common\";\r\nimport store from \"../../../store/store\";\r\n\r\n\r\n\r\n\r\nclass LoginService {\r\n  LoginApi = (params) => {\r\n    store.dispatch(loadingToggleAction(true))\r\n    signInWithEmailAndPassword(auth, params.email, params.password).then(\r\n      (data) => {\r\n        console.log('Response: '+JSON.stringify(data))\r\n        Alert('00', 'Login successful.')\r\n        store.dispatch(loadingToggleAction(false))\r\n        sessionStorage.setItem('user_uid',data.user.uid)\r\n        console.log('==================================')\r\n        window.location.href = 'http://localhost:3000/home/dashboard';\r\n      }\r\n    ).catch((err) => {\r\n      console.log('Response: '+JSON.stringify(err))\r\n      Alert('01', 'Bad user credentials.')\r\n      store.dispatch(loadingToggleAction(false))\r\n      console.log('==================================')\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default new LoginService();","//node imports\r\nimport React, { useState } from 'react'\r\nimport { Row, Col, Image, Form, Button, } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Card from '../../../components/card/card'\r\nimport { connect } from 'react-redux'\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n//local imports\r\nimport loginService from './login.service'\r\nimport Spinner from '../../../components/loader/loader'\r\n\r\n//local images\r\nimport auth1 from '../../../assets/images/auth/login.jpg'\r\nimport logo from '../../../assets/images/logo/logo.png'\r\n\r\n//local css\r\nimport './login.scss'\r\n\r\nconst Login = (props) => {\r\n\r\n   const [value, setValue] = useState('');\r\n\r\n   const onLogin = (event) => {\r\n\r\n      event.preventDefault();\r\n      let data = {\r\n         email: value.email[0],\r\n         password: value.password[0],\r\n      }\r\n      console.log('Component : Login')\r\n      console.log(\"Request : \" + JSON.stringify(data))\r\n\r\n      loginService.LoginApi(data)\r\n     \r\n\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <ToastContainer />\r\n         <Spinner loading={props.showLoading} />\r\n         <section className=\"login-content\" >\r\n            <Row className=\"m-0 align-items-center bg-white vh-100 bgcolor\">\r\n               <Col md=\"6\">\r\n                  <Row className=\"justify-content-center\">\r\n                     <Col md=\"10\">\r\n                        <Card className=\"card-transparent shadow-none d-flex justify-content-center mb-0 auth-card cardborder\">\r\n                           <Card.Body>\r\n                              <Link to=\"/home/dashboard\" className=\"navbar-brand d-flex align-items-center mb-5\">\r\n\r\n                                 <Image src={logo} height=\"50px\" width=\"50px\" alt=\"images\" />\r\n                                 <h4 className=\"logo-title ms-3\" >TennisCricket.in</h4>\r\n                              </Link>\r\n                              <Form onSubmit={onLogin.bind(this)}>\r\n                                 <Row>\r\n                                    <Col md=\"12\" className=\"mb-3 form-group\">\r\n                                       <Form.Floating className=\" mb-3\">\r\n                                          <Form.Control type=\"email\" className=\"\" id=\"email\" name=\"email\" placeholder=\"name@example.com\" onChange={(e) => setValue({ ...value, [e.target.name]: [e.target.value] })} required />\r\n                                          <Form.Label htmlFor=\"floatingInput\">Email</Form.Label>\r\n                                       </Form.Floating>\r\n                                    </Col>\r\n                                    <Col md=\"12\" className=\"mb-3 form-group\">\r\n                                       <Form.Floating className=\" mb-3\">\r\n                                          <Form.Control type=\"password\" className=\"\" id=\"password\" name=\"password\" placeholder=\"name@example.com\" onChange={(e) => setValue({ ...value, [e.target.name]: [e.target.value] })} required />\r\n                                          <Form.Label htmlFor=\"floatingInput\">Password</Form.Label>\r\n                                       </Form.Floating>\r\n                                    </Col>\r\n                                    <Col lg=\"12\" className=\"d-flex justify-content-between\">\r\n                                       <Form.Check className=\"form-check mb-3\">\r\n                                          <Form.Check.Input type=\"checkbox\" id=\"customCheck1\" required />\r\n                                          <Form.Check.Label htmlFor=\"customCheck1\">Remember Me</Form.Check.Label>\r\n                                       </Form.Check>\r\n                                       <Link to=\"/auth/recoverpw\">Forgot Password?</Link>\r\n                                    </Col>\r\n                                 </Row>\r\n                                 <Form.Group className=\"d-flex justify-content-center\">\r\n                                    <Button variant=\"btn btn-primary\" type=\"submit\" >Submit form</Button>\r\n                                 </Form.Group>\r\n                              </Form>\r\n\r\n                           </Card.Body>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </Col>\r\n               <Col md=\"6\" className=\"d-md-block d-none bg-primary p-0 mt-n1 vh-100 overflow-hidden bgrt_img\">\r\n                  <Image src={auth1} className=\"Image-fluid gradient-main animated-scaleX bgrt_img\" alt=\"images\" />\r\n               </Col>\r\n\r\n            </Row>\r\n         </section>\r\n      </>\r\n   )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      showLoading: state.auth.showLoading\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);","//node imports\r\nimport { getAuth } from \"@firebase/auth\";\r\nimport {initializeApp} from \"firebase/app\"\r\n\r\n\r\nvar firebaseConfig = {\r\n//   apiKey: \"AIzaSyCU0lGOmGurXxZUYClkeyU7Ll3AUKiXw0I\",\r\n//   authDomain: \"tcopen-76bb1.firebaseapp.com\",\r\n//   databaseURL: \"https://tcopen-76bb1.firebaseio.com\",\r\n//   projectId: \"tcopen-76bb1\",\r\n//   storageBucket: \"tcopen-76bb1.appspot.com\",\r\n//   messagingSenderId: \"727891651221\",  \r\n//   appId: \"1:727891651221:web:7964c249b06a6f7bfe099c\"\r\n    apiKey: \"AIzaSyBphAz67pZkq3dk5yOGyDhgn_g9ERSeOas\",\r\n    authDomain: \"tc-live-score.firebaseapp.com\",\r\n    databaseURL: \"https://tc-live-score.firebaseio.com\",\r\n    projectId: \"tc-live-score\",\r\n    storageBucket: \"tc-live-score.appspot.com\",\r\n    messagingSenderId: \"102476373342\"\r\n  };\r\n\r\n  const app = initializeApp(firebaseConfig)\r\n\r\n export const auth = getAuth(app)","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid = false,\n  rounded = false,\n  roundedCircle = false,\n  thumbnail = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nexport default Image;"],"names":["Card","props","_jsxs","className","concat","children","Header","Body","Footer","Title","Action","code","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","_createClass","LoginService","_classCallCheck","LoginApi","params","store","loadingToggleAction","signInWithEmailAndPassword","auth","email","password","then","data","console","log","JSON","stringify","Alert","sessionStorage","setItem","user","uid","window","location","href","catch","err","connect","state","showLoading","_useState","useState","_useState2","_slicedToArray","value","setValue","_Fragment","_jsx","ToastContainer","Spinner","loading","Row","Col","md","Link","to","Image","src","logo","height","width","alt","Form","onSubmit","event","preventDefault","loginService","bind","type","id","name","placeholder","onChange","e","_objectSpread","_defineProperty","target","required","htmlFor","lg","Button","variant","auth1","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","getAuth","PropTypes","React","_ref","ref","bsPrefix","_ref$fluid","fluid","_ref$rounded","rounded","_ref$roundedCircle","roundedCircle","_ref$thumbnail","thumbnail","_objectWithoutProperties","_excluded","useBootstrapPrefix","classNames","displayName"],"sourceRoot":""}